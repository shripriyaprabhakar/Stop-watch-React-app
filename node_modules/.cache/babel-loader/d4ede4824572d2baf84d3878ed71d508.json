{"ast":null,"code":"var _jsxFileName = \"/Users/priyasuresh/Documents/projects/Stop-watch-React-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\"; // class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       min: 0,\n//       sec: 0,\n//       milli: 0,\n//       text: \"Start\",\n//       lapTime: 0\n//     };\n//   }\n//   fastTick = () => {\n//     this.setState({ milli: this.state.milli + 1 });\n//     if (this.state.milli === 100) {\n//       this.setState({ milli: 0 });\n//     }\n//   };\n//   secTick = () => {\n//     this.setState({ sec: this.state.sec + 1 });\n//     if (this.state.sec === 60) {\n//       this.setState({ sec: 0 , min: this.state.min + 1 });\n//     }\n//   };\n//   startTimer = e => {\n//     e.preventDefault();\n//     if (e.target.value === \"Start\") {\n//       // var newText = this.state.text === \"Start\" ? \"Reset\" : \"Start\";\n//       this.setState({ text: \"Reset\" });\n//       this.fastTickCounter = setInterval(() => {\n//         this.fastTick();\n//       }, 1 / 100);\n//       this.secTickCounter = setInterval(() => {\n//         this.secTick();\n//       }, 1000);\n//     } else if (e.target.value === \"Reset\") {\n//       this.stopTimer();\n//       this.setState({ min: 0, sec: 0, milli: 0, text: \"Start\" });\n//     }\n//   };\n//   stopTimer = () => {\n//     clearInterval(this.fastTickCounter);\n//     clearInterval(this.secTickCounter);\n//     return (\n//       <div className=\"screen\">\n//         {this.state.min} : {this.state.sec} : {this.state.milli}\n//       </div>\n//     );\n//   };\n//   render() {\n//     return (\n//       <div className=\"screen\">\n//         <div className=\"text-screen\">\n//           {this.state.min} : {this.state.sec} : {this.state.milli}\n//         </div>\n//         <section>\n//           <button\n//             className=\"btns btn-1\"\n//             value={this.state.text}\n//             onClick={this.startTimer}\n//           >\n//             {this.state.text}\n//           </button>\n//           <button className=\"btns btn-2\" onClick={this.stopTimer}>\n//             Stop\n//           </button>\n//         </section>\n//         <section>\n//           <table>\n//             <tbody>\n//               <tr>\n//                 <td>lap</td>\n//                 <td>1min</td>\n//               </tr>\n//               <tr>\n//                 <td>lap</td>\n//                 <td>1min</td>\n//               </tr>\n//               <tr>\n//                 <td>lap</td>\n//                 <td>1min</td>\n//               </tr>\n//               <tr>\n//                 <td>lap</td>\n//                 <td>1min</td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         </section>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\n\nconst formattedSeconds = sec => Math.floor(sec / 60) + ':' + ('0' + sec % 60).slice(-2);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      secondsElapsed: 0,\n      laps: [],\n      lastClearedIncrementer: null\n    };\n    this.incrementer = null;\n  }\n\n  handleStartClick() {\n    this.incrementer = setInterval(() => this.setState({\n      secondsElapsed: this.state.secondsElapsed + 1\n    }), 1000);\n  }\n\n  handleStopClick() {\n    clearInterval(this.incrementer);\n    this.setState({\n      lastClearedIncrementer: this.incrementer\n    });\n  }\n\n  handleResetClick() {\n    clearInterval(this.incrementer);\n    this.setState({\n      secondsElapsed: 0,\n      laps: []\n    });\n  }\n\n  handleLabClick() {\n    this.setState({\n      laps: this.state.laps.concat([this.state.secondsElapsed])\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"stopwatch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"stopwatch-timer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, formattedSeconds(this.state.secondsElapsed)), this.state.secondsElapsed === 0 || this.incrementer === this.state.lastClearedIncrementer ? React.createElement(Button, {\n      className: \"start-btn\",\n      onClick: this.handleStartClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"start\") : React.createElement(Button, {\n      className: \"stop-btn\",\n      onClick: this.handleStopClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"stop\"), this.state.secondsElapsed !== 0 && this.incrementer !== this.state.lastClearedIncrementer ? React.createElement(Button, {\n      onClick: this.handleLabClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"lab\") : null, this.state.secondsElapsed !== 0 && this.incrementer === this.state.lastClearedIncrementer ? React.createElement(Button, {\n      onClick: this.handleResetClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"reset\") : null, React.createElement(\"ul\", {\n      className: \"stopwatch-laps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.state.laps.map((lap, i) => React.createElement(\"li\", {\n      className: \"stopwatch-lap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, i + 1), \"/ \", formattedSeconds(lap)))));\n  }\n\n}\n/** verbose component before 0.14\nclass Button extends React.Component {\n  render() {\n    return <button type=\"button\" {...this.props}\n                   className={\"btn \" + this.props.className } />;\n  }\n}\n*/\n\n\nconst Button = props => React.createElement(\"button\", Object.assign({\n  type: \"button\"\n}, props, {\n  className: \"btn \" + props.className,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 194\n  },\n  __self: this\n}));\n\nexport default App;","map":{"version":3,"sources":["/Users/priyasuresh/Documents/projects/Stop-watch-React-app/src/App.js"],"names":["React","Component","formattedSeconds","sec","Math","floor","slice","App","constructor","props","state","secondsElapsed","laps","lastClearedIncrementer","incrementer","handleStartClick","setInterval","setState","handleStopClick","clearInterval","handleResetClick","handleLabClick","concat","render","bind","map","lap","i","Button","className"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       min: 0,\n//       sec: 0,\n//       milli: 0,\n//       text: \"Start\",\n//       lapTime: 0\n//     };\n//   }\n\n//   fastTick = () => {\n//     this.setState({ milli: this.state.milli + 1 });\n//     if (this.state.milli === 100) {\n//       this.setState({ milli: 0 });\n//     }\n//   };\n//   secTick = () => {\n//     this.setState({ sec: this.state.sec + 1 });\n//     if (this.state.sec === 60) {\n//       this.setState({ sec: 0 , min: this.state.min + 1 });\n//     }\n//   };\n\n//   startTimer = e => {\n//     e.preventDefault();\n//     if (e.target.value === \"Start\") {\n//       // var newText = this.state.text === \"Start\" ? \"Reset\" : \"Start\";\n//       this.setState({ text: \"Reset\" });\n//       this.fastTickCounter = setInterval(() => {\n//         this.fastTick();\n//       }, 1 / 100);\n//       this.secTickCounter = setInterval(() => {\n//         this.secTick();\n//       }, 1000);\n//     } else if (e.target.value === \"Reset\") {\n//       this.stopTimer();\n//       this.setState({ min: 0, sec: 0, milli: 0, text: \"Start\" });\n//     }\n//   };\n\n//   stopTimer = () => {\n//     clearInterval(this.fastTickCounter);\n//     clearInterval(this.secTickCounter);\n//     return (\n//       <div className=\"screen\">\n//         {this.state.min} : {this.state.sec} : {this.state.milli}\n//       </div>\n//     );\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"screen\">\n//         <div className=\"text-screen\">\n//           {this.state.min} : {this.state.sec} : {this.state.milli}\n//         </div>\n//         <section>\n//           <button\n//             className=\"btns btn-1\"\n//             value={this.state.text}\n//             onClick={this.startTimer}\n//           >\n//             {this.state.text}\n//           </button>\n//           <button className=\"btns btn-2\" onClick={this.stopTimer}>\n//             Stop\n//           </button>\n//         </section>\n//         <section>\n//           <table>\n//             <tbody>\n//               <tr>\n//                 <td>lap</td>\n//                 <td>1min</td>\n//               </tr>\n//               <tr>\n//                 <td>lap</td>\n//                 <td>1min</td>\n//               </tr>\n//               <tr>\n//                 <td>lap</td>\n//                 <td>1min</td>\n//               </tr>\n//               <tr>\n//                 <td>lap</td>\n//                 <td>1min</td>\n//               </tr>\n//             </tbody>\n//           </table>\n//         </section>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\nconst formattedSeconds = (sec) =>\n  Math.floor(sec / 60) +\n    ':' +\n  ('0' + sec % 60).slice(-2)\n  \n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      secondsElapsed: 0, \n      laps: [],\n      lastClearedIncrementer: null\n    };\n    this.incrementer = null;\n  }  \n    \n  handleStartClick() {\n    this.incrementer = setInterval( () =>\n      this.setState({\n        secondsElapsed: this.state.secondsElapsed + 1\n      })\n    , 1000);\n  }\n  \n  handleStopClick() {\n    clearInterval(this.incrementer);\n    this.setState({\n      lastClearedIncrementer: this.incrementer\n    });\n  }\n  \n  handleResetClick() {\n    clearInterval(this.incrementer);\n    this.setState({\n      secondsElapsed: 0,\n      laps: []\n    });\n  }\n  \n  handleLabClick() {\n    this.setState({\n      laps: this.state.laps.concat([this.state.secondsElapsed])\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"stopwatch\">\n        <h1 className=\"stopwatch-timer\">{formattedSeconds(this.state.secondsElapsed)}</h1>\n   \n        {(this.state.secondsElapsed === 0 ||\n          this.incrementer === this.state.lastClearedIncrementer\n          ? <Button className=\"start-btn\" onClick={this.handleStartClick.bind(this)}>start</Button>\n          : <Button className=\"stop-btn\" onClick={this.handleStopClick.bind(this)}>stop</Button>\n        )}\n        \n        {(this.state.secondsElapsed !== 0 &&\n          this.incrementer !== this.state.lastClearedIncrementer\n          ? <Button onClick={this.handleLabClick.bind(this)}>lab</Button>\n          : null\n        )}\n\n\n        {(this.state.secondsElapsed !== 0 &&\n          this.incrementer === this.state.lastClearedIncrementer\n          ? <Button onClick={this.handleResetClick.bind(this)}>reset</Button>\n          : null\n        )}\n\n        <ul className=\"stopwatch-laps\">\n          { this.state.laps.map((lap, i) =>\n              <li className=\"stopwatch-lap\"><strong>{i + 1}</strong>/ {formattedSeconds(lap)}</li>)\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\n/** verbose component before 0.14\nclass Button extends React.Component {\n  render() {\n    return <button type=\"button\" {...this.props}\n                   className={\"btn \" + this.props.className } />;\n  }\n}\n*/\n\nconst Button = (props) =>\n  <button type=\"button\" {...props} className={\"btn \" + props.className } />;\n  export default App;"]},"metadata":{},"sourceType":"module"}