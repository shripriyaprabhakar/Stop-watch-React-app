{"ast":null,"code":"var _jsxFileName = \"/Users/priyasuresh/Documents/projects/stopwatch/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fastTick = () => {\n      this.setState({\n        milli: this.state.milli + 1\n      });\n\n      if (this.state.milli === 100) {\n        this.setState({\n          milli: 0\n        });\n      }\n    };\n\n    this.secTick = () => {\n      this.setState({\n        sec: this.state.sec + 1\n      });\n\n      if (this.state.sec === 60) {\n        this.setState({\n          sec: 0\n        }, {\n          min: this.state.min + 1\n        });\n      }\n    };\n\n    this.startTimer = () => {\n      var newText = this.state.text === \"Start\" ? \"Reset\" : \"Start\";\n      this.setState({\n        text: newText\n      });\n      this.fastTickCounter = setInterval(() => {\n        this.fastTick();\n      }, 1 / 100);\n      this.secTickCounter = setInterval(() => {\n        this.secTick();\n      }, 1000);\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.fastTickCounter);\n      clearInterval(this.secTickCounter);\n      return React.createElement(\"div\", {\n        className: \"screen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.min, \" : \", this.state.sec, \" : \", this.state.milli);\n    };\n\n    this.state = {\n      min: 0,\n      sec: 0,\n      milli: 0,\n      text: \"Start\",\n      counter: 0\n    };\n    var fastTickCounter;\n    var secTickCounter;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"StopWatch\"), React.createElement(\"div\", {\n      className: \"screen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.min, \" : \", this.state.sec, \" : \", this.state.milli), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btns btn-1\",\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.text), React.createElement(\"button\", {\n      className: \"btns btn-2\",\n      onClick: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Stop\")));\n  }\n\n}\n\nexport default App; // const formattedSeconds = sec =>\n//   Math.floor(sec / 60) + \":\" + (\"0\" + (sec % 60)).slice(-2);\n// class Stopwatch extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       secondsElapsed: 0,\n//       laps: [],\n//       lastClearedIncrementer: null\n//     };\n//     this.incrementer = null;\n//   }\n//   handleStartClick() {\n//     this.incrementer = setInterval(\n//       () =>\n//         this.setState({\n//           secondsElapsed: this.state.secondsElapsed + 1\n//         }),\n//       1000\n//     );\n//   }\n//   handleStopClick() {\n//     clearInterval(this.incrementer);\n//     this.setState({\n//       lastClearedIncrementer: this.incrementer\n//     });\n//   }\n//   handleResetClick() {\n//     clearInterval(this.incrementer);\n//     this.setState({\n//       secondsElapsed: 0,\n//       laps: []\n//     });\n//   }\n//   handleLabClick() {\n//     this.setState({\n//       laps: this.state.laps.concat([this.state.secondsElapsed])\n//     });\n//   }\n//   render() {\n//     return (\n//       <div className=\"stopwatch\">\n//         <h1 className=\"stopwatch-timer\">\n//           {formattedSeconds(this.state.secondsElapsed)}\n//         </h1>\n//         {this.state.secondsElapsed === 0 ||\n//         this.incrementer === this.state.lastClearedIncrementer ? (\n//           <Button\n//             className=\"start-btn\"\n//             onClick={this.handleStartClick.bind(this)}\n//           >\n//             start\n//           </Button>\n//         ) : (\n//           <Button\n//             className=\"stop-btn\"\n//             onClick={this.handleStopClick.bind(this)}\n//           >\n//             stop\n//           </Button>\n//         )}\n//         {this.state.secondsElapsed !== 0 &&\n//         this.incrementer !== this.state.lastClearedIncrementer ? (\n//           <Button onClick={this.handleLabClick.bind(this)}>lab</Button>\n//         ) : null}\n//         {this.state.secondsElapsed !== 0 &&\n//         this.incrementer === this.state.lastClearedIncrementer ? (\n//           <Button onClick={this.handleResetClick.bind(this)}>reset</Button>\n//         ) : null}\n//         <ul className=\"stopwatch-laps\">\n//           {this.state.laps.map((lap, i) => (\n//             <li className=\"stopwatch-lap\">\n//               <strong>{i + 1}</strong>/ {formattedSeconds(lap)}\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n// /** verbose component before 0.14\n// class Button extends React.Component {\n//   render() {\n//     return <button type=\"button\" {...this.props}\n//                    className={\"btn \" + this.props.className } />;\n//   }\n// }\n// */\n// const Button = props => (\n//   <button type=\"button\" {...props} className={\"btn \" + props.className} />\n// );\n// React.render(<Stopwatch />, document.body);","map":{"version":3,"sources":["/Users/priyasuresh/Documents/projects/stopwatch/src/App.js"],"names":["React","Component","App","constructor","fastTick","setState","milli","state","secTick","sec","min","startTimer","newText","text","fastTickCounter","setInterval","secTickCounter","stopTimer","clearInterval","counter","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      min: 0,\n      sec: 0,\n      milli: 0,\n      text: \"Start\",\n      counter: 0\n    };\n    var fastTickCounter;\n    var secTickCounter;\n  }\n\n  fastTick = () => {\n    this.setState({ milli: this.state.milli + 1 });\n    if (this.state.milli === 100) {\n      this.setState({ milli: 0 });\n    }\n  };\n  secTick = () => {\n    this.setState({ sec: this.state.sec + 1 });\n    if (this.state.sec === 60) {\n      this.setState({ sec: 0 }, { min: this.state.min + 1 });\n    }\n  };\n\n  startTimer = () => {\n    var newText = this.state.text === \"Start\" ? \"Reset\" : \"Start\";\n    this.setState({ text: newText });\n    this.fastTickCounter = setInterval(() => {\n      this.fastTick();\n    }, 1 / 100);\n    this.secTickCounter = setInterval(() => {\n      this.secTick();\n    }, 1000);\n  };\n\n  stopTimer = () => {\n    clearInterval(this.fastTickCounter);\n    clearInterval(this.secTickCounter);\n    return (\n      <div className=\"screen\">\n        {this.state.min} : {this.state.sec} : {this.state.milli}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>StopWatch</h1>\n        <div className=\"screen\">\n          {this.state.min} : {this.state.sec} : {this.state.milli}\n        </div>\n        <div>\n          <button className=\"btns btn-1\" onClick={this.startTimer}>\n            {this.state.text}\n          </button>\n          <button className=\"btns btn-2\" onClick={this.stopTimer}>\n            Stop\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// const formattedSeconds = sec =>\n//   Math.floor(sec / 60) + \":\" + (\"0\" + (sec % 60)).slice(-2);\n\n// class Stopwatch extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       secondsElapsed: 0,\n//       laps: [],\n//       lastClearedIncrementer: null\n//     };\n//     this.incrementer = null;\n//   }\n\n//   handleStartClick() {\n//     this.incrementer = setInterval(\n//       () =>\n//         this.setState({\n//           secondsElapsed: this.state.secondsElapsed + 1\n//         }),\n//       1000\n//     );\n//   }\n\n//   handleStopClick() {\n//     clearInterval(this.incrementer);\n//     this.setState({\n//       lastClearedIncrementer: this.incrementer\n//     });\n//   }\n\n//   handleResetClick() {\n//     clearInterval(this.incrementer);\n//     this.setState({\n//       secondsElapsed: 0,\n//       laps: []\n//     });\n//   }\n\n//   handleLabClick() {\n//     this.setState({\n//       laps: this.state.laps.concat([this.state.secondsElapsed])\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"stopwatch\">\n//         <h1 className=\"stopwatch-timer\">\n//           {formattedSeconds(this.state.secondsElapsed)}\n//         </h1>\n\n//         {this.state.secondsElapsed === 0 ||\n//         this.incrementer === this.state.lastClearedIncrementer ? (\n//           <Button\n//             className=\"start-btn\"\n//             onClick={this.handleStartClick.bind(this)}\n//           >\n//             start\n//           </Button>\n//         ) : (\n//           <Button\n//             className=\"stop-btn\"\n//             onClick={this.handleStopClick.bind(this)}\n//           >\n//             stop\n//           </Button>\n//         )}\n\n//         {this.state.secondsElapsed !== 0 &&\n//         this.incrementer !== this.state.lastClearedIncrementer ? (\n//           <Button onClick={this.handleLabClick.bind(this)}>lab</Button>\n//         ) : null}\n\n//         {this.state.secondsElapsed !== 0 &&\n//         this.incrementer === this.state.lastClearedIncrementer ? (\n//           <Button onClick={this.handleResetClick.bind(this)}>reset</Button>\n//         ) : null}\n\n//         <ul className=\"stopwatch-laps\">\n//           {this.state.laps.map((lap, i) => (\n//             <li className=\"stopwatch-lap\">\n//               <strong>{i + 1}</strong>/ {formattedSeconds(lap)}\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// /** verbose component before 0.14\n// class Button extends React.Component {\n//   render() {\n//     return <button type=\"button\" {...this.props}\n//                    className={\"btn \" + this.props.className } />;\n//   }\n// }\n// */\n\n// const Button = props => (\n//   <button type=\"button\" {...props} className={\"btn \" + props.className} />\n// );\n\n// React.render(<Stopwatch />, document.body);\n"]},"metadata":{},"sourceType":"module"}